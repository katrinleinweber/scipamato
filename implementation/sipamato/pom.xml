<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ch.difty</groupId>
    <artifactId>sipamato</artifactId>
    <version>0.5.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>sipamato</name>
    <description>SiPaMaTo - Scientific Paper Management Tool</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath />
    </parent>

    <url>https://github.com/ursjoss/sipamato</url>

    <developers>
        <developer>
            <name>Urs Joss</name>
            <id>u.joss</id>
            <email>u.joss@difty.ch</email>
            <roles>
                <role>Software Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>GNU General Public License v3.0</name>
            <url>http://www.gnu.org/licenses/gpl-3.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:https://github.com/ursjoss/sipamato/</connection>
        <developerConnection>scm:git:git@github.com:ursjoss/sipamato.git</developerConnection>
        <url>https://github.com/ursjoss/sipamato/</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/ursjoss/sipamato/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>1.8</java.version>

        <!-- persistence layer -->
        <jdbc-postgres.version>42.1.1</jdbc-postgres.version>
        <org.jooq.version>3.9.3</org.jooq.version>
        <org.jooq.target.dir>target/generated-sources/jooq</org.jooq.target.dir>
        <org.jooq.db-generator>org.jooq.util.postgres.PostgresDatabase</org.jooq.db-generator>
        <flyway.version>4.2.0</flyway.version>

        <!-- presentation layer -->
        <wicket-spring-boot-starter.version>1.0.8</wicket-spring-boot-starter.version>
        <wicket.version>7.7.0</wicket.version>
        <wicket-bootstrap.version>0.10.15</wicket-bootstrap.version>
        <jasperreports.version>6.4.0</jasperreports.version>

        <!-- Plugin versions -->
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <property-file>src/main/resources/application.properties</property-file>

        <!-- test (surefire) test class definitions -->
        <surefire.testclass.pt>**/*PageTest.java, **/*PanelTest.java</surefire.testclass.pt>
        <surefire.testclass.it>**/*IntegrationTest.java</surefire.testclass.it>


        <!-- Sonar properties -->
        <sonar.projectKey>ch.difty.sipamato</sonar.projectKey>
        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.exclusions>target/generated-sources/**/*</sonar.exclusions>
        <sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
    </properties>

    <dependencies>
        <!-- spring-boot starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- XML processing -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.12</version>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <exclusions>
                <exclusion>
                    <!-- Excluding tomcat-jdbc so we can use HikariCP -->
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- JDBC Drivers - PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${jdbc-postgres.version}</version><!--$NO-MVN-MAN-VER$ -->
        </dependency>

        <!-- HikariCP connection pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>

        <!-- jOOQ - building type safe SQL -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${org.jooq.version}</version><!--$NO-MVN-MAN-VER$ -->
        </dependency>

        <!-- Flyway to manage database migrations -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version><!--$NO-MVN-MAN-VER$ -->
        </dependency>

        <!-- Spring boot admin starter client - Lacking configuration -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>1.5.0</version>
        </dependency>

        <!-- Apache Wicket + bootstrap -->
        <dependency>
            <groupId>com.giffing.wicket.spring.boot.starter</groupId>
            <artifactId>wicket-spring-boot-starter</artifactId>
            <version>${wicket-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-core</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-ioc</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-extensions</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-request</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-spring</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-auth-roles</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.wicketstuff</groupId>
            <artifactId>wicketstuff-annotation</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>de.agilecoders.wicket</groupId>
            <artifactId>wicket-bootstrap-core</artifactId>
            <version>${wicket-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>de.agilecoders.wicket</groupId>
            <artifactId>wicket-bootstrap-extensions</artifactId>
            <version>${wicket-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>de.agilecoders.wicket</groupId>
            <artifactId>wicket-bootstrap-less</artifactId>
            <version>${wicket-bootstrap.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-collections</groupId>
                    <artifactId>commons-collections</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.agilecoders.wicket</groupId>
            <artifactId>wicket-bootstrap-themes</artifactId>
            <version>${wicket-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-bean-validation</artifactId>
            <version>${wicket.version}</version>
        </dependency>

        <!-- Lambda utilities -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jool</artifactId>
            <version>0.9.12</version>
        </dependency>

        <!-- Feign for accessing PubMed - https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-feign -->
        <!-- TODO currently pulls in (and requires) commons-lang, have to live with it for now, excluding it does not work -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
            <version>1.3.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-jaxb</artifactId>
            <version>9.5.0</version>
        </dependency>

        <!-- JasperReport for PDF generation -->
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>${jasperreports.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-lang</groupId>
                    <artifactId>commons-lang</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wicketstuff</groupId>
            <artifactId>wicketstuff-jasperreports</artifactId>
            <version>${wicket.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.jasperreports</groupId>
                    <artifactId>jasperreports</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports-fonts</artifactId>
            <version>6.0.0</version>
        </dependency>

        <!-- The debug bar is only rendered visible in development mode from within BasePage and is therefore added outside of profile development -->
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-devutils</artifactId>
            <version>${wicket.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>1.1.0</version>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Maven profile development - activating the spring-boot-devtools -->
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.include>development</spring.profiles.include>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <!-- Maven profile sonar-coverage: set up stage for sonar code analysis -->
        <profile>
            <id>sonar-coverage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <spring.profile.include>DB_JOOQ</spring.profile.include>

            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>0.7.9</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>agent-for-ut</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>agent-for-it</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Maven profile pageTests - limits tests to page/panel tests only -->
            <id>pageTests</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>${surefire.testclass.pt}</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Maven profile allTests - runs all tests without restrictions -->
            <id>allTests</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Dummy profile for m2e - http://stackoverflow.com/questions/7905501/get-rid-of-pom-not-found-warning-for-org-eclipse-m2elifecycle-mapping -->
        <profile>
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                    <plugin>
                        <groupId>org.eclipse.m2e</groupId>
                        <artifactId>lifecycle-mapping</artifactId>
                        <version>1.0.0</version>
                        <configuration>
                            <lifecycleMappingMetadata>
                                <pluginExecutions>
                                    <pluginExecution>
                                        <pluginExecutionFilter>
                                            <groupId>org.jooq</groupId>
                                            <artifactId>jooq-codegen-maven</artifactId>
                                            <versionRange>${org.jooq.version}</versionRange>
                                            <goals>
                                                <goal>generate</goal>
                                            </goals>
                                        </pluginExecutionFilter>
                                        <action>
                                            <ignore />
                                        </action>
                                    </pluginExecution>
                                    <pluginExecution>
                                        <pluginExecutionFilter>
                                            <groupId>org.flywaydb</groupId>
                                            <artifactId>flyway-maven-plugin</artifactId>
                                            <version>${flyway.version}</version>
                                            <goals>
                                                <goal>migrate</goal>
                                            </goals>
                                        </pluginExecutionFilter>
                                        <action>
                                            <ignore />
                                        </action>
                                    </pluginExecution>
                                </pluginExecutions>
                            </lifecycleMappingMetadata>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.3.0.603</version>
                </plugin>

                <!-- Publish properties from external property files for other maven plugins to be accessible -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${property-file}</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Flyway Database migration -->
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway.version}</version>

                    <!-- Execution of the Flyway plugin in the "generate-sources" phase to allow the jOOQ code generator to take over -->
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>migrate</goal>
                            </goals>
                        </execution>
                    </executions>

                    <configuration>
                        <url>${flyway.url}</url>
                        <user>${flyway.user}</user>
                        <password>${flyway.password}</password>
                    </configuration>
                </plugin>

                <!-- The jOOQ code generator plugin -->
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${org.jooq.version}</version><!--$NO-MVN-MAN-VER$ -->

                    <executions>
                        <execution>
                            <id>generate-postgres</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <jdbc>
                                    <driver>${spring.datasource.hikari.driver-class-name}</driver>
                                    <url>${spring.datasource.hikari.jdbc-url}</url>
                                    <user>${spring.datasource.hikari.username}</user>
                                    <password>${spring.datasource.hikari.password}</password>
                                </jdbc>
                                <generator>
                                    <database>
                                        <name>${org.jooq.db-generator}</name>
                                        <includes>.*</includes>
                                        <excludes />
                                        <inputSchema>${db.schema}</inputSchema>
                                    </database>
                                    <generate>
                                        <deprecated>false</deprecated>
                                        <instanceFields>true</instanceFields>
                                        <pojos>false</pojos>
                                    </generate>
                                    <target>
                                        <packageName>ch.difty.sipamato.db</packageName>
                                        <directory>${org.jooq.target.dir}</directory>
                                    </target>
                                </generator>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- jaxb2 maven plugin to generate the java classes from the dtd -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <id>xjc</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <packageName>ch.difty.sipamato.pubmed</packageName>
                    <sourceType>dtd</sourceType>
                    <sources>
                        <source>src/main/dtd</source>
                    </sources>
                </configuration>
            </plugin>

            <!-- Assist eclipse in recognizing the generates sources (from jOOQ and jaxb) as source files -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${org.jooq.target.dir}</source>
                                <source>target/generated-sources/jaxb</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- have actuator report the git version the project was built with (http://localhost:8080/actuator/info -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <dotGitDirectory>${project.basedir}../../.git</dotGitDirectory>
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- By default do not run page tests and integration tests -->
                    <excludes>
                        <exclude>${surefire.testclass.pt}</exclude>
                        <exclude>${surefire.testclass.it}</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration> <!-- add this to disable checking -->
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- publish db specific properties from property files for the Flyway and jOOQ plugins -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>

            <!-- Flyway database migration -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
            </plugin>

            <!-- The jOOQ code generator plugin -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
            </plugin>

            <!-- spring-boot-maven-plugin - in case you're running mvn spring-boot:run -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <profiles>
                        <profile>DB_JOOQ</profile>
                    </profiles>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
